"use strict";(()=>{var o=class{constructor(){this.audioContext=null,this.timeLeft=60,this.currentProblem=0,this.correctAnswers=0,this.totalProblems=0,this.startTime=null,this.problemStartTime=null,this.responseTimes=[],this.gameActive=!1,this.currentAnswer=null,this.currentNote=null,this.hintTimer=null,this.assistedMode=!1,this.selectedExercise="note-recognition",this.correctAnswerButton=null,this.currentInterval=null,this.intervalNotes=null,this.currentChord=null,this.chordNotes=null,this.currentPattern=null,this.rhythmPattern=null,this.gameTimer=null,this.setupElements(),this.resetGame(),this.bindEvents(),this.setupAudio()}setupElements(){this.setupScreen=document.getElementById("setupScreen"),this.gameScreen=document.getElementById("gameScreen"),this.resultsScreen=document.getElementById("resultsScreen"),this.exerciseButtons=document.querySelectorAll(".exercise-btn"),this.timeLimitSlider=document.getElementById("timeLimit"),this.timeDisplay=document.getElementById("timeDisplay"),this.assistedModeCheckbox=document.getElementById("assistedMode"),this.startBtn=document.getElementById("startBtn"),this.timer=document.getElementById("timer"),this.problemCounter=document.getElementById("problemCounter"),this.accuracy=document.getElementById("accuracy"),this.progressFill=document.getElementById("progressFill"),this.musicProblem=document.getElementById("musicProblem"),this.answerOptions=document.getElementById("answerOptions"),this.skipBtn=document.getElementById("skipBtn"),this.playNoteBtn=document.getElementById("playNoteBtn"),this.playAgainBtn=document.getElementById("playAgainBtn"),this.shareScoreBtn=document.getElementById("shareScoreBtn"),this.feedbackOverlay=document.getElementById("feedbackOverlay")}setupAudio(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)}catch{this.audioContext=null}}playSound(t,e,n=.1){if(this.audioContext)try{let s=this.audioContext.createOscillator(),i=this.audioContext.createGain();s.connect(i),i.connect(this.audioContext.destination),s.frequency.value=t,s.type="sine",i.gain.setValueAtTime(0,this.audioContext.currentTime),i.gain.linearRampToValueAtTime(n,this.audioContext.currentTime+.01),i.gain.exponentialRampToValueAtTime(.001,this.audioContext.currentTime+e),s.start(this.audioContext.currentTime),s.stop(this.audioContext.currentTime+e)}catch{}}resetGame(){this.timeLeft=parseInt(this.timeLimitSlider.value)||60,this.currentProblem=0,this.correctAnswers=0,this.totalProblems=0,this.startTime=null,this.problemStartTime=null,this.responseTimes=[],this.gameActive=!1,this.currentAnswer=null,this.currentNote=null,this.hintTimer=null,this.assistedMode=this.assistedModeCheckbox.checked;let t=document.querySelector(".exercise-btn.selected");this.selectedExercise=t?.dataset.exercise||"note-recognition"}bindEvents(){this.startBtn.addEventListener("click",()=>this.startGame()),this.playAgainBtn.addEventListener("click",()=>this.showSetup()),this.skipBtn.addEventListener("click",()=>this.skipProblem()),this.playNoteBtn.addEventListener("click",()=>this.playCurrentExercise()),this.shareScoreBtn.addEventListener("click",()=>this.shareScore()),this.exerciseButtons.forEach(t=>{t.addEventListener("click",()=>{this.exerciseButtons.forEach(e=>e.classList.remove("selected")),t.classList.add("selected")})}),this.timeLimitSlider.addEventListener("input",()=>{this.timeDisplay.textContent=`${this.timeLimitSlider.value}s`})}getNoteFrequency(t){return{C4:261.63,D4:293.66,E4:329.63,F4:349.23,G4:392,A4:440,B4:493.88,C5:523.25,D5:587.33,E5:659.25,F5:698.46,G5:783.99,A5:880,B5:987.77}[t]||440}generateNoteRecognitionProblem(){let t=[{note:"G",y:-22.5,line:!1,octave:5},{note:"F",y:-10,line:!0,octave:5},{note:"E",y:2.5,line:!1,octave:5},{note:"D",y:15,line:!0,octave:5},{note:"C",y:27.5,line:!1,octave:5},{note:"B",y:40,line:!0,octave:4},{note:"A",y:52.5,line:!1,octave:4},{note:"G",y:65,line:!0,octave:4},{note:"F",y:77.5,line:!1,octave:4},{note:"E",y:90,line:!0,octave:4},{note:"D",y:102.5,line:!1,octave:4}],e=t[Math.floor(Math.random()*t.length)];return this.currentNote=e.note+e.octave,this.currentAnswer=e.note,e}generateIntervalProblem(){let t=["C4","D4","E4","F4","G4","A4","B4","C5"],e=t[Math.floor(Math.random()*t.length)],n=[{name:"Same Note",semitones:0},{name:"Next Door Up",semitones:2},{name:"Skip One Up",semitones:4},{name:"Far Apart",semitones:7}],s=n[Math.floor(Math.random()*n.length)];this.currentInterval={...s,baseNote:e},this.currentAnswer=s.name;let i=this.getNoteFrequency(e),r=i*Math.pow(2,s.semitones/12);return this.intervalNotes=[i,r],this.currentInterval}generateChordProblem(){let t=["C4","D4","E4","F4","G4","A4","B4"],e=t[Math.floor(Math.random()*t.length)],n=[{name:"Happy Sound",notes:[0,4,7]},{name:"Sad Sound",notes:[0,3,7]}],s=n[Math.floor(Math.random()*n.length)];this.currentChord={...s,baseNote:e},this.currentAnswer=s.name;let i=this.getNoteFrequency(e);return this.chordNotes=s.notes.map(r=>i*Math.pow(2,r/12)),this.currentChord}generateScaleProblem(){let t=["C4","D4","E4","F4","G4","A4","B4","C5"],e=t[Math.floor(Math.random()*t.length)],n=[{name:"Slow Beat",rhythm:[500,500,500,500],notes:[e,e,e,e]},{name:"Fast Beat",rhythm:[250,250,250,250],notes:[e,e,e,e]},{name:"Long-Short",rhythm:[750,250,750,250],notes:[e,e,e,e]},{name:"Skip Beat",rhythm:[500,0,500,500],notes:[e,null,e,e]},{name:"Up and Down",rhythm:[400,400,400,400],notes:this.generateMelodyPattern(e)},{name:"Bouncy Beat",rhythm:[300,150,300,150,300],notes:this.generateBouncyPattern(e)}],s=n[Math.floor(Math.random()*n.length)];return this.currentPattern=s,this.currentAnswer=s.name,this.rhythmPattern=s,s}generateMelodyPattern(t){let e=["C4","D4","E4","F4","G4","A4","B4","C5"].indexOf(t),n=["C4","D4","E4","F4","G4","A4","B4","C5"];return[n[e],n[Math.min(e+1,n.length-1)],n[Math.min(e+2,n.length-1)],n[e]]}generateBouncyPattern(t){let e=["C4","D4","E4","F4","G4","A4","B4","C5"].indexOf(t),n=["C4","D4","E4","F4","G4","A4","B4","C5"];return[n[e],n[Math.min(e+2,n.length-1)],n[e],n[Math.min(e+2,n.length-1)],n[e]]}generateOptions(t,e){let n=[];switch(e){case"note-recognition":n=["C","D","E","F","G","A","B"];break;case"interval-recognition":n=["Same Note","Next Door Up","Skip One Up","Far Apart"];break;case"chord-recognition":n=["Happy Sound","Sad Sound"];break;case"scale-patterns":n=["Slow Beat","Fast Beat","Long-Short","Skip Beat","Up and Down","Bouncy Beat"];break}let s=[t];for(;s.length<4&&s.length<n.length;){let i=n[Math.floor(Math.random()*n.length)];s.includes(i)||s.push(i)}return s.sort(()=>Math.random()-.5)}showProblem(){let t,e="";switch(this.selectedExercise){case"note-recognition":t=this.generateNoteRecognitionProblem(),e=this.createStaffHTML(t);break;case"interval-recognition":t=this.generateIntervalProblem(),e='<div class="interval-display">Listen to the interval and identify it</div>';break;case"chord-recognition":t=this.generateChordProblem(),e='<div class="chord-display">Listen to the chord and identify its type</div>';break;case"scale-patterns":t=this.generateScaleProblem(),e='<div class="chord-display">Listen to the scale and identify its type</div>';break}this.musicProblem.innerHTML=e,this.hintTimer&&(clearTimeout(this.hintTimer),this.hintTimer=null);let n=this.generateOptions(this.currentAnswer,this.selectedExercise);this.answerOptions.innerHTML="",n.forEach((s,i)=>{let r=document.createElement("button");r.className="answer-btn",r.textContent=s,r.addEventListener("click",()=>this.selectAnswer(s,r)),s===this.currentAnswer&&(this.correctAnswerButton=r),this.answerOptions.appendChild(r)}),this.problemStartTime=Date.now(),this.assistedMode&&(this.hintTimer=setTimeout(()=>{this.correctAnswerButton&&this.gameActive&&this.correctAnswerButton.classList.add("hint")},3e3)),setTimeout(()=>this.playCurrentExercise(),500)}createStaffHTML(t){return`
                    <div class="staff">
                        <div class="staff-lines">
                            <div class="staff-line"></div>
                            <div class="staff-line"></div>
                            <div class="staff-line"></div>
                            <div class="staff-line"></div>
                            <div class="staff-line"></div>
                            ${t.y<0||t.y>100?`<div class="staff-line" style="top: ${t.y}%; width: 60px; left: 135px;"></div>`:""}
                        </div>
                        <div class="clef">\u{1D11E}</div>
                        <div class="note" style="top: ${t.y}%;">
                            <div class="note-stem"></div>
                        </div>
                    </div>
                    <p style="font-size: 1.2em; margin-top: 20px;">\u{1F3B5} What letter name is this note?</p>
                `}playCurrentNote(){if(!this.audioContext||!this.currentNote)return;this.audioContext.state==="suspended"&&this.audioContext.resume();let t=this.getNoteFrequency(this.currentNote);this.playSound(t,1,.3)}playCurrentExercise(){if(this.audioContext)switch(this.audioContext.state==="suspended"&&this.audioContext.resume(),this.selectedExercise){case"note-recognition":this.playCurrentNote();break;case"interval-recognition":this.playInterval();break;case"chord-recognition":this.playChord();break;case"scale-patterns":this.playRhythm();break}}playInterval(){this.intervalNotes&&(this.playSound(this.intervalNotes[0],.8,.3),setTimeout(()=>{this.playSound(this.intervalNotes[1],.8,.3)},900))}playChord(){this.chordNotes&&this.chordNotes.forEach(t=>{this.playSound(t,1.5,.2)})}playRhythm(){if(!this.rhythmPattern)return;let t=0;this.rhythmPattern.rhythm.forEach((e,n)=>{if(e>0&&this.rhythmPattern.notes[n]){let s=this.getNoteFrequency(this.rhythmPattern.notes[n]);setTimeout(()=>{this.playSound(s,e/1e3*.8,.3)},t)}t+=e})}selectAnswer(t,e){if(!this.gameActive)return;this.hintTimer&&(clearTimeout(this.hintTimer),this.hintTimer=null),document.querySelectorAll(".answer-btn.hint").forEach(r=>{r.classList.remove("hint")});let n=t===this.currentAnswer,s=Date.now()-this.problemStartTime;this.responseTimes.push(s),e.classList.add(n?"correct":"incorrect"),!n&&this.correctAnswerButton&&setTimeout(()=>{this.correctAnswerButton.classList.add("correct")},300),this.answerOptions.querySelectorAll(".answer-btn").forEach(r=>r.style.pointerEvents="none"),this.showFeedback(n),n?(this.playSound(523,.1),setTimeout(()=>this.playSound(659,.1),100),setTimeout(()=>this.playSound(784,.2),200)):(this.playSound(300,.1),setTimeout(()=>this.playSound(250,.1),100),setTimeout(()=>this.playSound(200,.2),200)),n&&this.correctAnswers++,this.totalProblems++,this.currentProblem++,this.updateUI(),setTimeout(()=>{this.timeLeft>0&&this.gameActive&&this.showProblem()},n?800:1500)}showFeedback(t){this.feedbackOverlay.textContent=t?"\u266A Correct!":"\u266B Wrong!",this.feedbackOverlay.className=`feedback-overlay ${t?"correct":"incorrect"}`,this.feedbackOverlay.offsetHeight,setTimeout(()=>{this.feedbackOverlay.className="feedback-overlay"},600)}skipProblem(){this.gameActive&&(this.totalProblems++,this.currentProblem++,this.responseTimes.push(1e4),this.updateUI(),this.timeLeft>0&&this.showProblem())}updateUI(){let t=this.totalProblems>0?Math.round(this.correctAnswers/this.totalProblems*100):100;this.accuracy.textContent=`${t}%`,this.problemCounter.textContent=`${this.currentProblem}`;let e=Math.min(this.currentProblem/60*100,100);this.progressFill.style.width=`${e}%`}updateTimer(){this.timer.textContent=this.timeLeft.toString(),this.timeLeft<=10?this.timer.className="timer danger":this.timeLeft<=20?this.timer.className="timer warning":this.timer.className="timer",this.timeLeft<=0?this.endGame():this.timeLeft--}calculateMusicAge(){let t=this.totalProblems>0?this.correctAnswers/this.totalProblems:0,e=this.responseTimes.length>0?this.responseTimes.reduce((r,a)=>r+a,0)/this.responseTimes.length:5e3,s={"note-recognition":1,"interval-recognition":.9,"chord-recognition":.8,"scale-patterns":.7}[this.selectedExercise]||1,i=20;return i+=(1-t)*40,i+=Math.min(e/1e3*5,30),i*=s,i-=Math.min(this.totalProblems*.2,10),Math.max(8,Math.min(80,Math.round(i)))}startGame(){this.resetGame(),this.gameActive=!0,this.showScreen("game"),this.audioContext&&this.audioContext.state==="suspended"&&this.audioContext.resume(),this.gameTimer=setInterval(()=>this.updateTimer(),1e3),this.showProblem()}endGame(){this.gameActive=!1,this.gameTimer!==null&&clearInterval(this.gameTimer),this.hintTimer&&(clearTimeout(this.hintTimer),this.hintTimer=null);let t=this.calculateMusicAge(),e=this.totalProblems>0?Math.round(this.correctAnswers/this.totalProblems*100):0,n=this.responseTimes.length>0?(this.responseTimes.reduce((i,r)=>i+r,0)/this.responseTimes.length/1e3).toFixed(1):"0.0",s={"note-recognition":"Note Names","interval-recognition":"Sound Distance","chord-recognition":"Happy or Sad","scale-patterns":"Beat Patterns"};document.getElementById("musicAge").textContent=`Musical Age: ${t}`,document.getElementById("finalProblems").textContent=this.totalProblems.toString(),document.getElementById("finalAccuracy").textContent=`${e}%`,document.getElementById("avgTime").textContent=`${n}s`,document.getElementById("finalExercise").textContent=s[this.selectedExercise]||"Unknown",this.showScreen("results")}shareScore(){let t=document.getElementById("musicAge").textContent,e=document.getElementById("finalAccuracy").textContent,n=document.getElementById("finalProblems").textContent,s=document.getElementById("finalExercise").textContent,i=`\u{1F3B5} I just completed Music Theory Training!
${t}, solved ${n} ${s} problems with ${e} accuracy!

Try it yourself: ${window.location.href}`;navigator.share?navigator.share({title:"Music Theory Training Results",text:i}):navigator.clipboard.writeText(i).then(()=>{alert("Score copied to clipboard!")})}showScreen(t){switch(this.setupScreen.classList.add("hidden"),this.gameScreen.classList.add("hidden"),this.resultsScreen.classList.add("hidden"),t){case"setup":this.setupScreen.classList.remove("hidden");break;case"game":this.gameScreen.classList.remove("hidden");break;case"results":this.resultsScreen.classList.remove("hidden");break}}showSetup(){this.resetGame(),this.showScreen("setup")}};new o;})();
