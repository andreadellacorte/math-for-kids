(()=>{var i=class{constructor(){this.patterns=[{name:"Ascending",description:"Going Up",visual:"\u266A \u2197 \u266A \u2197 \u266A",generator:()=>this.generateAscending()},{name:"Descending",description:"Going Down",visual:"\u266A \u2198 \u266A \u2198 \u266A",generator:()=>this.generateDescending()},{name:"Up-down",description:"Up then Down",visual:"\u266A \u2197 \u266A \u2198 \u266A",generator:()=>this.generateUpDown()},{name:"Down-up",description:"Down then Up",visual:"\u266A \u2198 \u266A \u2197 \u266A",generator:()=>this.generateDownUp()},{name:"Repeat",description:"Same Note",visual:"\u266A \u2192 \u266A \u2192 \u266A",generator:()=>this.generateRepeat()}],this.baseFrequencies=[261.63,293.66,329.63,349.23,392,440,493.88,523.25],this.currentSequence=[],this.currentPattern=null,this.selectedPattern=null,this.score=0,this.level=1,this.streak=0,this.volume=.5,this.audioContext=null,this.initAudio(),this.initializeElements(),this.createPatternOptions(),this.attachEventListeners(),this.updateDisplay()}async initAudio(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)}catch{}}initializeElements(){this.scoreElement=document.getElementById("score"),this.levelElement=document.getElementById("level"),this.streakElement=document.getElementById("streak"),this.audioDisplay=document.getElementById("audioDisplay"),this.sequenceDisplay=document.getElementById("sequenceDisplay"),this.patternsContainer=document.getElementById("patternsContainer"),this.volumeSlider=document.getElementById("volumeSlider"),this.volumeValue=document.getElementById("volumeValue"),this.newSequenceBtn=document.getElementById("newSequenceBtn"),this.playBtn=document.getElementById("playBtn"),this.checkBtn=document.getElementById("checkBtn")}createPatternOptions(){this.patternsContainer.innerHTML="",this.patterns.forEach((e,n)=>{let t=document.createElement("div");t.className="pattern-option",t.dataset.pattern=e.name,t.innerHTML=`
                        <div class="pattern-visual">${e.visual}</div>
                        <div class="pattern-label">${e.name}</div>
                        <div style="font-size: 0.9em; color: #666;">${e.description}</div>
                    `,t.addEventListener("click",()=>this.selectPattern(e.name,t)),this.patternsContainer.appendChild(t)})}attachEventListeners(){this.newSequenceBtn.addEventListener("click",()=>this.generateNewSequence()),this.playBtn.addEventListener("click",()=>this.playCurrentSequence()),this.checkBtn.addEventListener("click",()=>this.checkAnswer()),this.volumeSlider.addEventListener("input",e=>{this.volume=e.target.value/100,this.volumeValue.textContent=`${e.target.value}%`})}generateNewSequence(){this.currentSequence=[],this.selectedPattern=null,this.clearPatternSelection(),this.currentPattern=this.patterns[Math.floor(Math.random()*this.patterns.length)],this.currentSequence=this.currentPattern.generator(),this.audioDisplay.textContent="Playing sequence... \u{1F3B5}",this.sequenceDisplay.textContent="Listen carefully and select the pattern you hear...",this.playCurrentSequence(),this.playBtn.disabled=!1,this.checkBtn.disabled=!1}generateAscending(){let e=Math.floor(Math.random()*4);return[this.baseFrequencies[e],this.baseFrequencies[e+2],this.baseFrequencies[e+4]]}generateDescending(){let e=Math.floor(Math.random()*4)+4;return[this.baseFrequencies[e],this.baseFrequencies[e-2],this.baseFrequencies[e-4]]}generateUpDown(){let e=Math.floor(Math.random()*3);return[this.baseFrequencies[e],this.baseFrequencies[e+4],this.baseFrequencies[e+2]]}generateDownUp(){let e=Math.floor(Math.random()*3)+4;return[this.baseFrequencies[e],this.baseFrequencies[e-4],this.baseFrequencies[e-2]]}generateRepeat(){let e=Math.floor(Math.random()*6)+1;return[this.baseFrequencies[e],this.baseFrequencies[e],this.baseFrequencies[e]]}async playCurrentSequence(){if(!(!this.audioContext||this.currentSequence.length===0)){this.audioDisplay.textContent="Playing sequence... \u{1F3B5}";for(let e=0;e<this.currentSequence.length;e++)this.playNote(this.currentSequence[e],.8),await this.sleep(900);this.audioDisplay.textContent="Select the pattern you heard!"}}playNote(e,n){if(!this.audioContext)return;let t=this.audioContext.createOscillator(),s=this.audioContext.createGain();t.connect(s),s.connect(this.audioContext.destination),t.frequency.setValueAtTime(e,this.audioContext.currentTime),t.type="sine",s.gain.setValueAtTime(this.volume*.3,this.audioContext.currentTime),s.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+n),t.start(this.audioContext.currentTime),t.stop(this.audioContext.currentTime+n)}sleep(e){return new Promise(n=>setTimeout(n,e))}selectPattern(e,n){this.clearPatternSelection(),this.selectedPattern=e,n.classList.add("selected"),this.sequenceDisplay.textContent=`Selected: ${e}`}clearPatternSelection(){document.querySelectorAll(".pattern-option").forEach(e=>{e.classList.remove("selected","correct","incorrect")})}checkAnswer(){if(!this.selectedPattern){this.sequenceDisplay.textContent="Please select a pattern first!";return}let e=this.selectedPattern===this.currentPattern.name;this.showResults(e),e?(this.score+=20+this.level*5,this.streak++,this.streak%4===0&&(this.level++,this.audioDisplay.textContent=`\u{1F389} Level Up! Now level ${this.level}!`)):this.streak=0,this.updateDisplay(),setTimeout(()=>{this.clearPatternSelection(),this.playBtn.disabled=!0,this.checkBtn.disabled=!0,this.sequenceDisplay.textContent="Ready for the next sequence..."},3e3)}showResults(e){document.querySelectorAll(".pattern-option").forEach(n=>{let t=n.dataset.pattern;t===this.currentPattern.name?n.classList.add("correct"):t===this.selectedPattern&&!e&&n.classList.add("incorrect")}),e?(this.audioDisplay.textContent="\u{1F389} Excellent! You identified the pattern correctly!",this.sequenceDisplay.textContent=`\u2705 Correct! It was ${this.currentPattern.name}`):(this.audioDisplay.textContent="\u274C Not quite right. Try listening again!",this.sequenceDisplay.textContent=`\u274C The correct pattern was: ${this.currentPattern.name}`)}updateDisplay(){this.scoreElement.textContent=this.score,this.levelElement.textContent=this.level,this.streakElement.textContent=this.streak}};document.addEventListener("DOMContentLoaded",()=>{new i});})();
